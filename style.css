/* style.css */

/* ------------------------- */
/* --- CUSTOM PROPERTIES --- */
/* ------------------------- */
/* Defines a consistent theme (colors, fonts, spacing) for the entire sheet. */
:root {
    --bg-color: #f8f9fa;
    --text-color: #212529;
    --border-color: #ced4da;
    --header-bg: #e9ecef;
    --header-text: #495057;
    --input-bg: #fff;

    --font-body: 'Roboto Condensed', sans-serif;
    --font-display: 'Share Tech Mono', monospace;

    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
}

/* ----------------- */
/* --- BASE & RESET --- */
/* ----------------- */
/* Basic reset for consistent box model and body styling. */
*, *::before, *::after {
    box-sizing: border-box;
}

body {
    font-family: var(--font-body);
    background-color: var(--bg-color);
    color: var(--text-color);
    margin: 0;
    padding: var(--spacing-md);
}

/* ------------------- */
/* --- EXPORT CONTROLS --- */
/* ------------------- */
/* Styling for the box containing the 'Save as PDF' and 'Save as Markdown' buttons. */
.export-controls {
    max-width: 1200px;
    margin: 0 auto var(--spacing-md) auto;
    padding: var(--spacing-md);
    background-color: var(--input-bg);
    border: 1px solid var(--border-color);
    text-align: center;
}

.export-controls h3 {
    margin: 0 0 var(--spacing-md) 0;
    font-family: var(--font-display);
}

.export-controls button {
    font-family: var(--font-body);
    font-weight: bold;
    font-size: 1rem;
    padding: var(--spacing-sm) var(--spacing-md);
    margin: 0 var(--spacing-sm);
    border: 1px solid var(--header-text);
    background-color: var(--header-text);
    color: var(--bg-color);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

.export-controls button:hover {
    background-color: var(--text-color);
    border-color: var(--text-color);
}


/* ----------------- */
/* --- LAYOUT --- */
/* ----------------- */
/* High-level structure for the character sheet itself. */
.character-sheet {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
}

section {
    border: 1px solid var(--border-color);
    padding: var(--spacing-lg);
    background-color: var(--input-bg);
}

.sheet-header {
    text-align: center;
    font-family: var(--font-display);
    border-bottom: 2px solid var(--border-color);
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
}

.sheet-header h1 {
    margin: 0;
    color: var(--text-color);
}

.sheet-header h2 {
    margin: 0;
    font-size: 1rem;
    color: var(--header-text);
}

/* Defines a two-column layout, used for attributes and modifiers. */
.columns-2 {
    display: flex;
    gap: var(--spacing-lg);
}

.columns-2 > .col-left {
    flex: 2; /* Takes up 2/3 of the space */
}

.columns-2 > .col-right {
    flex: 1; /* Takes up 1/3 of the space */
}

/* ------------------- */
/* --- COMPONENTS --- */
/* ------------------- */
/* Styling for individual form elements and groups. */
fieldset {
    border: 1px solid var(--border-color);
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
}

legend {
    font-weight: bold;
    padding: 0 var(--spacing-sm);
    font-family: var(--font-display);
    text-transform: uppercase;
}

.input-group {
    display: flex;
    flex-direction: column;
    margin-bottom: var(--spacing-md);
}

.input-group.full-width {
    grid-column: 1 / -1;
}

label {
    margin-bottom: var(--spacing-xs);
    font-size: 0.875rem;
    font-weight: bold;
    color: var(--header-text);
}

input[type="text"],
input[type="number"],
textarea {
    width: 100%;
    padding: var(--spacing-sm);
    border: 1px solid var(--border-color);
    background-color: var(--input-bg);
    font-family: var(--font-body);
    font-size: 1rem;
}

textarea {
    resize: vertical;
}

/* Specific grid layouts for different sections. */
.info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: var(--spacing-md);
}

.attributes-grid {
    display: grid;
    grid-template-columns: 1fr auto 1fr auto;
    gap: var(--spacing-sm) var(--spacing-md);
    align-items: center;
}

.vitals-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-md);
}

/* ------------------- */
/* --- SKILLS SECTION --- */
/* ------------------- */
/* Detailed styling for the complex skills table grid. */
.skills-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
}

.skill-group-header {
    background-color: var(--header-bg);
    padding: var(--spacing-sm);
    margin: 0 0 var(--spacing-sm) 0;
    text-align: center;
    font-family: var(--font-display);
}

.skill-row {
    display: grid;
    grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
    gap: var(--spacing-sm);
    align-items: center;
    margin-bottom: var(--spacing-sm);
}

.skill-row.header {
    font-weight: bold;
    text-align: center;
    font-size: 0.8rem;
    color: var(--header-text);
}
.skill-row.header span {
    border-bottom: 1px solid var(--border-color);
    padding-bottom: var(--spacing-xs);
}

.skill-row label {
    font-weight: normal;
    margin-bottom: 0;
    color: var(--text-color);
}

.skill-row input {
    text-align: center;
    padding: var(--spacing-xs);
}

.skill-row .skill-total {
    background-color: var(--header-bg);
    font-weight: bold;
}

/* ------------------- */
/* --- RESPONSIVE --- */
/* ------------------- */
/* Media query to adapt the layout for smaller screens like tablets and phones. */
@media (max-width: 768px) {
    .columns-2 {
        flex-direction: column;
    }

    .info-grid, .vitals-grid {
        grid-template-columns: 1fr 1fr;
    }
}